function tmin = step_size(X, Ky, matparm, param, option)
N= param.N;
s= param.s;
k= param.k;
T= param.T;
beta = param.beta;
U = matparm.U{1};
S = matparm.S{1}; 
V = matparm.V{1}; 

%T = 200;
t = linspace(1e-5,0.1,T);
L = zeros(1,T);
for i=1:length(t)
  if i==ceil(length(t)/2)
   display(sprintf('#i:%d',i));
  end
 X_temp = X*V*cos(t(i)*S)*V' + U*sin(t(i)*S)*V'; 
 if strcmp(option.kernelMethod, 'linear')
    K = X_temp*X_temp' + 1/(beta)*eye(N); 
    L(i) = - 1/2*trace(K\Ky); 
 elseif strcmp(option.kernelMethod, 'rbf')  
    K = calckernel_v2(option,X_temp)+ 1/(beta)*eye(N);
    L(i) = -s/2*log(det(K))- 1/2*trace(K\Ky);
 end
end
[~,idxMin] = min(L);
tmin = t(idxMin);
display(sprintf('tmin: %f',tmin));
end